<?xml version="1.0"?>

<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->

<configuration>

  <configSections>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="StructureMap" type="StructureMap.Configuration.StructureMapConfigurationSection,StructureMap"/>      
  </configSections>

  <appSettings>    
    <add key="AllowMultipleLogons" value="false"/>
    <add key="RunSweeper" value="true"/>
    <add key="SweeperTimeout" value="30"/>
    <add key="LoginTimeout" value="2880"/><!-- minutes-->
    <add key="LoginCookieName" value="sm_auth"/>
    <add key="MinPasswordLength" value="6"/>
    <add key="UseSlidingExpiration" value="true"/>
    <add key="LocaleCookieName" value="sm_locale"/>
    <add key="LocaleCookieTimeout" value="527040"/><!-- minutes -->
    <add key="EncryptionKey" value="37d3a5e4-2a5f-4421-ba5e-8773c3a27958"/>
    <add key="EncryptionSalt" value="55ad57e7-54c2-4f09-836c-66c66014be1b"/>
    <add key="RestorePasswordMailFrom" value="do-not-reply@storage-monster.apphb.com"/>
    <add key="SiteUrl" value="http://storage-monster.apphb.com"/>
    <add key="AutoDetectSiteUrl" value="false"/> <!-- if set to true, won't work if web server is behind nginx or similar tool -->
    <add key="ResetPasswordRequestExpiration" value="120"/>
    <add key="JUSTONEDB_DBI_URL" value="postgres://storage_monster:123456@127.0.0.1:5432/storage_services"/>
<!--
	<add key="LOGENTRIES_ACCOUNT_KEY" value="MY_KEY"/>
	<add key="LOGENTRIES_LOCATION" value="MY_LOCATION"/>
-->	
  </appSettings>


  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net1211">
        <arg key="configType" value="INLINE" />
      </factoryAdapter>
    </logging>
  </common>

  <log4net>
    <appender name="GeneralFileAppender" type="log4net.Appender.RollingFileAppender">
      <lockingmodel type="log4net.Appender.FileAppender+MinimalLock"/>
      <file value="logs/general.log" />
      <appendToFile value="true" />
      <maximumFileSize value="1MB" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="-1" />
      <staticLogFileName value="false" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d{yyyy-MM-dd HH:mm:ss.fff} [%t] %-5p %c - %m %l %ndc %n %n %exception %n"  />
      </layout>
    </appender>

    <appender name="ForbiddenFileAppender" type="log4net.Appender.RollingFileAppender">
      <lockingmodel type="log4net.Appender.FileAppender+MinimalLock"/>
      <file value="logs/forbidden.log" />
      <appendToFile value="true" />
      <maximumFileSize value="1MB" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="-1" />
      <staticLogFileName value="false" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d{yyyy-MM-dd HH:mm:ss.fff} [%t] %-5p %c - %m %l %ndc %n %n %exception %n"  />
      </layout>
    </appender>

	<appender name="LeAppender" type="log4net.Appender.LeAppender, LeLog4net">
      <Debug value="true" />
      <Ssl value="false" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss.fff} [%t] %-5p %c - %m %l %ndc %n %n %exception %n" />
      </layout>
    </appender>
	
    <!--levels: DEBUG, INFO, WARN, ERROR, FATAL-->
    <root>
      <level value="WARN"/>
      <appender-ref ref="GeneralFileAppender" />
	  <!-- <appender-ref ref="LeAppender" /> -->
    </root>

    <logger name="ForbiddenRequests">
      <level value="WARN" />
      <appender-ref ref="ForbiddenFileAppender" />
      <!-- <appender-ref ref="LeAppender" /> -->
    </logger>
  </log4net>
    
    
  <StructureMap>
    <!-- Database-->
    <!-- MYSQL-->    
    <!--
    <DefaultInstance
            PluginType  ="StorageMonster.Database.IDbConfiguration, StorageMonster.Database"
            PluggedType ="StorageMonster.Database.MySql.DbConfiguration, StorageMonster.Database.MySql"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Database.IConnectionProvider, StorageMonster.Database"
            PluggedType ="StorageMonster.Database.MySql.ConnectionProvider, StorageMonster.Database.MySql"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Database.Repositories.IStoragePluginsRepository, StorageMonster.Database"
            PluggedType ="StorageMonster.Database.MySql.Repositories.StoragePluginsRepository, StorageMonster.Database.MySql"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Database.Repositories.IUserRepository, StorageMonster.Database"
            PluggedType ="StorageMonster.Database.MySql.Repositories.UserRepository, StorageMonster.Database.MySql"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Database.Repositories.IUserRoleRepository, StorageMonster.Database"
            PluggedType ="StorageMonster.Database.MySql.Repositories.UserRoleRepository, StorageMonster.Database.MySql"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Database.Repositories.ISessionRepository, StorageMonster.Database"
            PluggedType ="StorageMonster.Database.MySql.Repositories.SessionRepository, StorageMonster.Database.MySql"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Database.Repositories.IStorageAccountRepository, StorageMonster.Database"
            PluggedType ="StorageMonster.Database.MySql.Repositories.StorageAccountRepository, StorageMonster.Database.MySql"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Database.Repositories.IStorageAccountSettingsRepository, StorageMonster.Database"
            PluggedType ="StorageMonster.Database.MySql.Repositories.StorageAccountSettingsRepository, StorageMonster.Database.MySql"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Database.Repositories.IResetPasswordRequestsRepository, StorageMonster.Database"
            PluggedType ="StorageMonster.Database.MySql.Repositories.ResetPasswordRequestsRepository, StorageMonster.Database.MySql"
            Scope="Singleton"  />-->
      <!-- PGSQL -->
     
      <DefaultInstance
            PluginType  ="StorageMonster.Database.IDbConfiguration, StorageMonster.Database"
            PluggedType ="StorageMonster.Database.PgSql.JustOneDbConfiguration, StorageMonster.Database.PgSql"
            Scope="Singleton"  />
      <DefaultInstance
              PluginType  ="StorageMonster.Database.IConnectionProvider, StorageMonster.Database"
              PluggedType ="StorageMonster.Database.PgSql.ConnectionProvider, StorageMonster.Database.PgSql"
              Scope="Singleton"  />
      <DefaultInstance
              PluginType  ="StorageMonster.Database.Repositories.IStoragePluginsRepository, StorageMonster.Database"
              PluggedType ="StorageMonster.Database.PgSql.Repositories.StoragePluginsRepository, StorageMonster.Database.PgSql"
              Scope="Singleton"  />
      <DefaultInstance
              PluginType  ="StorageMonster.Database.Repositories.IUserRepository, StorageMonster.Database"
              PluggedType ="StorageMonster.Database.PgSql.Repositories.UserRepository, StorageMonster.Database.PgSql"
              Scope="Singleton"  />
      <DefaultInstance
              PluginType  ="StorageMonster.Database.Repositories.IUserRoleRepository, StorageMonster.Database"
              PluggedType ="StorageMonster.Database.PgSql.Repositories.UserRoleRepository, StorageMonster.Database.PgSql"
              Scope="Singleton"  />
      <DefaultInstance
              PluginType  ="StorageMonster.Database.Repositories.ISessionRepository, StorageMonster.Database"
              PluggedType ="StorageMonster.Database.PgSql.Repositories.SessionRepository, StorageMonster.Database.PgSql"
              Scope="Singleton"  />
      <DefaultInstance
              PluginType  ="StorageMonster.Database.Repositories.IStorageAccountRepository, StorageMonster.Database"
              PluggedType ="StorageMonster.Database.PgSql.Repositories.StorageAccountRepository, StorageMonster.Database.PgSql"
              Scope="Singleton"  />
      <DefaultInstance
              PluginType  ="StorageMonster.Database.Repositories.IStorageAccountSettingsRepository, StorageMonster.Database"
              PluggedType ="StorageMonster.Database.PgSql.Repositories.StorageAccountSettingsRepository, StorageMonster.Database.PgSql"
              Scope="Singleton"  />
      <DefaultInstance
              PluginType  ="StorageMonster.Database.Repositories.IResetPasswordRequestsRepository, StorageMonster.Database"
              PluggedType ="StorageMonster.Database.PgSql.Repositories.ResetPasswordRequestsRepository, StorageMonster.Database.PgSql"
              Scope="Singleton"  />


    

    <!-- Services -->
    <!--<DefaultInstance
        PluginType  ="StorageMonster.Utilities.Serialization.ISerializer, StorageMonster.Utilities"
        PluggedType ="StorageMonster.Utilities.Serialization.BinarySerializer, StorageMonster.Utilities"
        Scope="Singleton"  />-->
      <!--<DefaultInstance
        PluginType  ="StorageMonster.Utilities.Serialization.ISerializer, StorageMonster.Utilities"
        PluggedType ="StorageMonster.Utilities.Serialization.JsonSerializer, StorageMonster.Utilities"
        Scope="Singleton"  />-->
     <DefaultInstance
        PluginType  ="StorageMonster.Utilities.Serialization.ISerializer, StorageMonster.Utilities"
        PluggedType ="StorageMonster.Utilities.Serialization.JsonBase64Serializer, StorageMonster.Utilities"
        Scope="Singleton"  />
      
      
    <DefaultInstance
           PluginType  ="StorageMonster.Web.Services.Configuration.IWebConfiguration, StorageMonster.Web"
           PluggedType ="StorageMonster.Web.Services.Configuration.WebConfiguration, StorageMonster.Web"
           Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Services.ILocaleProvider, StorageMonster.Services"
            PluggedType ="StorageMonster.Services.Facade.LocaleProvider, StorageMonster.Services.Facade"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Services.ITimeZonesProvider, StorageMonster.Services"
            PluggedType ="StorageMonster.Services.Facade.TimeZonesProvider, StorageMonster.Services.Facade"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Common.ICacheService, StorageMonster.Common"
            PluggedType ="StorageMonster.Web.Services.HttpInMemoryCacheService, StorageMonster.Web"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Services.IStoragePluginsService, StorageMonster.Services"
            PluggedType ="StorageMonster.Services.Facade.StoragePluginsService, StorageMonster.Services.Facade"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Services.IUserService, StorageMonster.Services"
            PluggedType ="StorageMonster.Services.Facade.UserService, StorageMonster.Services.Facade"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Services.Security.IPasswordHasher, StorageMonster.Services"
            PluggedType ="StorageMonster.Services.Facade.PasswordHasher, StorageMonster.Services.Facade"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Services.Security.ICryptoService, StorageMonster.Services"
            PluggedType ="StorageMonster.Services.Facade.AesCryptoService, StorageMonster.Services.Facade"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Services.Security.ISecurityConfiguration, StorageMonster.Services"
            PluggedType ="StorageMonster.Services.Facade.SecurityConfiguration, StorageMonster.Services.Facade"
            Scope="Singleton"  />    
    <DefaultInstance
            PluginType  ="StorageMonster.Services.Security.ISessionService, StorageMonster.Services"
            PluggedType ="StorageMonster.Services.Facade.SessionService, StorageMonster.Services.Facade"
            Scope="Singleton"  />
    <DefaultInstance
           PluginType  ="StorageMonster.Web.Services.Security.IMembershipService, StorageMonster.Web"
           PluggedType ="StorageMonster.Web.Services.Security.MembershipService, StorageMonster.Web"
           Scope="Singleton"  />
    <DefaultInstance
          PluginType  ="StorageMonster.Web.Services.Security.IFormsAuthenticationService, StorageMonster.Web"
          PluggedType ="StorageMonster.Web.Services.Security.FormsAuthenticationService, StorageMonster.Web"
          Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Services.IStorageAccountService, StorageMonster.Services"
            PluggedType ="StorageMonster.Services.Facade.StorageAccountService, StorageMonster.Services.Facade"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Services.ISweeper, StorageMonster.Services"
            PluggedType ="StorageMonster.Services.Facade.Sweeper, StorageMonster.Services.Facade"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Services.ITemplateEngine, StorageMonster.Services"
            PluggedType ="StorageMonster.Services.Facade.VelocityTemplateEngine, StorageMonster.Services.Facade"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Web.Services.IMessageDeliveryService, StorageMonster.Web"
            PluggedType ="StorageMonster.Web.Services.Mail.MailDeliveryService, StorageMonster.Web"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Web.Services.ITrackingService, StorageMonster.Web"
            PluggedType ="StorageMonster.Web.Services.CookieTrackingService, StorageMonster.Web"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Web.Services.IIconProvider, StorageMonster.Web"
            PluggedType ="StorageMonster.Web.Services.IconProvider, StorageMonster.Web"
            Scope="Singleton"  />
    <DefaultInstance
            PluginType  ="StorageMonster.Services.IStreamFactory, StorageMonster.Services"
            PluggedType ="StorageMonster.Services.Facade.StreamFactory, StorageMonster.Services.Facade"
            Scope="Singleton"  />  
      

    <!-- Plugins -->
    <!-- Storage plugins -->
    <AddInstance
      Key="WebDav"
      PluginType="StorageMonster.Plugin.IStoragePlugin, StorageMonster.Plugin"
      PluggedType="StorageMonster.Plugin.WebDav.WebDavPlugin, StorageMonster.Plugin.WebDav"
      Scope="Singleton"/>
    <AddInstance
      Key="YandexDisk"
      PluginType="StorageMonster.Plugin.IStoragePlugin, StorageMonster.Plugin"
      PluggedType="StorageMonster.Plugin.YandexDisk.YandexDiskPlugin, StorageMonster.Plugin.YandexDisk"
      Scope="Singleton"/>
  </StructureMap>

  <connectionStrings>
    <add name="StorageMonsterMySqlServices" connectionString="Server=localhost;Database=storage_services;User ID=storage_monster; Pwd=123456" />
    <add name="StorageMonsterPgSqlServices" connectionString="Server=127.0.0.1;Port=5432;Database=storage_services;User Id=storage_monster;Password=123456;Enlist=true;Pooling=false;" />
      
      
  </connectionStrings>

  <!--
  <system.net>
    <mailSettings>
      <smtp deliveryMethod="Network">
        <network
          host="smtp.site.com"
          userName="hello123@site.com"
          password="mypassword"/>
      </smtp>
    </mailSettings>
  </system.net>
  -->
  
  <system.web>
      <httpHandlers>
          <add path="upload.smh" verb="POST"
              type="StorageMonster.Web.Services.HttpModules.LargeFileUploadHttpModule, StorageMonster.Web"/>
      </httpHandlers>
      <httpRuntime enableVersionHeader="false" maxRequestLength="5000" />
      <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
   
    <authentication mode="None"/> <!-- forms authentication in appharbor did not work for me -->   

   <customErrors mode="Off"/>

    <!--<customErrors mode="On" defaultRedirect="~/content/error.htm">
      <error statusCode="403" redirect="~/forbidden" />
      <error statusCode="404" redirect="~/notfound" />
      <error statusCode="500" redirect="~/content/error.htm" />
    </customErrors>-->

    <pages>
      <namespaces>
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
      </namespaces>
    </pages>
    <httpModules>
      <add name="MonsterAuthorizeModule" type="StorageMonster.Web.Services.HttpModules.MonsterAuthorizeHttpModule, StorageMonster.Web" />
      <add name="MonsterCleanupModule" type="StorageMonster.Web.Services.HttpModules.MonsterCleanupHttpModule, StorageMonster.Web" />
      <!--<add name="LargeFileUploadHttpModule" type="StorageMonster.Web.Services.HttpModules.LargeFileUploadHttpModule, StorageMonster.Web" />-->
      <!-- optional modules-->
      <add name="MonsterSecurityModule" type="StorageMonster.Web.Services.HttpModules.MonsterSecurityHttpModule, StorageMonster.Web" />        
      <!--<add name="MonsterLowercaseRoutesHttpModule" type="StorageMonster.Web.Services.HttpModules.MonsterLowercaseRoutesHttpModule, StorageMonster.Web" /> -->
    </httpModules>
  </system.web>
    
    <system.webServer>
        <httpProtocol>
        <customHeaders>
            <remove name="X-Powered-By" />
        </customHeaders>
    </httpProtocol>
      
    <validation validateIntegratedModeConfiguration="false"/>
    <modules runAllManagedModulesForAllRequests="false">
      <remove name="MonsterCleanupModule" />
      <remove name="MonsterAuthorizeModule" />
      <remove name="MonsterSecurityModule" />
      <remove name="MonsterLowercaseRoutesHttpModule" />
      <!--<remove name="LargeFileUploadHttpModule"/>-->
      <!-- optional -->
      <!--<remove name="MonsterLowercaseRoutesHttpModule" />-->
      <add name="MonsterCleanupModule" type="StorageMonster.Web.Services.HttpModules.MonsterCleanupHttpModule, StorageMonster.Web" />
      <add name="MonsterAuthorizeModule" preCondition="managedHandler" type="StorageMonster.Web.Services.HttpModules.MonsterAuthorizeHttpModule, StorageMonster.Web" />
      <!--<add name="LargeFileUploadHttpModule" preCondition="managedHandler" type="StorageMonster.Web.Services.HttpModules.LargeFileUploadHttpModule, StorageMonster.Web" />-->
      <!-- optional modules-->
      <add name="MonsterSecurityModule" type="StorageMonster.Web.Services.HttpModules.MonsterSecurityHttpModule, StorageMonster.Web" />
      <!--<add name="MonsterLowercaseRoutesHttpModule" type="StorageMonster.Web.Services.HttpModules.MonsterLowercaseRoutesHttpModule, StorageMonster.Web" />-->
    </modules>
    <!--<httpErrors errorMode="Custom">
      <error statusCode="400" subStatusCode="-1" path="~/badrequest" responseMode="ExecuteURL" />
    </httpErrors>-->     
  </system.webServer>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Extensions" culture="neutral" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="3.5.0.0" newVersion="4.0.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>


    <location path="upload.smh">
        <system.webServer>
            <handlers>
                <add path="*" verb="POST" name="Uploader"
                    type="StorageMonster.Web.Services.HttpModules.LargeFileUploadHttpModule, StorageMonster.Web"/>
            </handlers>
            <security>
                <requestFiltering>
                    <requestLimits maxAllowedContentLength="4294967295"/>
                </requestFiltering>
            </security>
        </system.webServer>
    </location>
</configuration>

